{"version":3,"sources":["Assets/images/neutral.svg","Assets/images/logo.svg","Assets/images/super-happy.svg","Assets/images/happy.svg","Assets/images/smiling.svg","Assets/images/sad.svg","Assets/images/crying.svg","Assets/images/sick.svg","Assets/images/sunny.svg","Assets/images/moon.svg","Containers/header.js","Containers/Main/Creature/creature.js","Containers/Main/Indicators/indicator/indicator.js","Containers/Main/Indicators/indicators.js","Containers/Main/Controls/controls.js","Containers/Main/main.js","Containers/footer.js","App.js","serviceWorker.js","Store/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","state","_this2","this","window","setInterval","props","incrementHour","react_default","a","createElement","className","href","onClick","resetGame","src","Logo","height","alt","Math","floor","score","hour","day","Component","connect","Object","objectSpread","dispatch","type","moonCycle","moonCyclePositions","creature","creatureFace","faceNeutral","mood","hunger","happiness","health","energy","moodDescription","faceSick","faceSuperHappy","faceHappy","faceSmilling","faceSad","faceCrying","hourShiftLeft","sunPosition","left","transform","display","console","log","moonPosition","sun","style","moon","indicator","color","value","bars","i","fill","push","key","name","iconClass","indicators","Indicators_indicator_indicator","controls","feedCake","feedCarrot","giveMedicine","play","sleep","Main","Main_Creature_creature","Main_Indicators_indicators","Main_Controls_controls","footer","App","header","Main_main","Containers_footer","Boolean","location","hostname","match","initialState","awake","max","min","reducer","arguments","length","undefined","action","currentScore","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0bd7c09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/neutral.4d39e029.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.280eb141.svg\";","module.exports = __webpack_public_path__ + \"static/media/super-happy.1949bc13.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy.e7631c0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/smiling.3e789fab.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad.44bda2f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/crying.a8fc3371.svg\";","module.exports = __webpack_public_path__ + \"static/media/sick.36612b79.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny.02f11d1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.5039864c.svg\";","import React, { Component } from 'react';\nimport Logo from '../Assets/images/logo.svg'\n\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  state = {\n  \n  }\n\n  componentWillMount() {\n    window.setInterval( () => {\n      this.props.incrementHour();\n    }, 1000 );\n  }\n\n  render() {\n    return ( \n      <header className='Header'>\n        <div href=\"./\" className=\"logo\" onClick={ this.props.resetGame }>\n          <img src={ Logo } height=\"50px\" alt=\"Logo\"></img>\n          <h4>Reset</h4>\n        </div>\n        <h3>Score: { Math.floor( this.props.score ) }</h3>\n        <div>\n          <h4>Hour: { this.props.hour }</h4>\n          <h4>Day: { this.props.day }</h4>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ...state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    incrementHour: () => dispatch({ type: \"INCREMENT_HOUR\" }),\n    resetGame: () => dispatch({ type: \"RESET\" })\n  } \n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )( Header );","import React from 'react';\nimport './creature.css'\n\nimport faceSuperHappy from '../../../Assets/images/super-happy.svg';\nimport faceHappy from '../../../Assets/images/happy.svg';\nimport faceSmilling from '../../../Assets/images/smiling.svg';\nimport faceNeutral from '../../../Assets/images/neutral.svg';\nimport faceSad from '../../../Assets/images/sad.svg';\nimport faceCrying from '../../../Assets/images/crying.svg';\nimport faceSick from '../../../Assets/images/sick.svg';\n\nimport sun from '../../../Assets/images/sunny.svg';\nimport moon from '../../../Assets/images/moon.svg';\n\nlet moonCycle = 0;\nconst moonCyclePositions = [ 5, 10, 85, 90 ];\n\nconst creature = ( props ) => {\n  var creatureFace = faceNeutral;\n  var mood = ( props.hunger + props.happiness + props.health + props.energy ) / 4;\n  var moodDescription = \"Neutral\";\n\n  switch( true ) {\n    case props.health<5: { creatureFace = faceSick; moodDescription = \"Sick!\"; break; }\n    case mood>8: { creatureFace = faceSuperHappy; moodDescription = \"Super Happy!\"; break; }\n    case mood>6: { creatureFace = faceHappy; moodDescription = \"Happy\"; break; }\n    case mood>5: { creatureFace = faceSmilling; moodDescription = \"Smiling\"; break; }\n    case mood>4: { creatureFace = faceNeutral; moodDescription = \"Neutral\"; break; }\n    case mood>3: { creatureFace = faceSad; moodDescription = \"Sad\"; break; }\n    default: { creatureFace = faceCrying; moodDescription = \"Crying\"; break; }\n  }\n\n  let hourShiftLeft = ( props.hour ) - 11.5;\n  let sunPosition = {\n    left: ( props.hour * 200 /23 ) - 50 +\"%\",\n    transform: \"translateY(\"+ ( ( hourShiftLeft*hourShiftLeft ) - 50 ) +\"px)\",\n    display: ( props.hour > 20 ) ? \"none\" : \"\"\n  }\n\n  console.log( \"Re-render!\", props.hour === 12 );\n  if( props.hour === 12 ){\n    moonCycle += 1;\n    if( moonCycle >= 4 ){ moonCycle = 0; }\n  }\n  let moonPosition = {\n    transform: \"translateY(\"+ ( hourShiftLeft*hourShiftLeft ) / 2 +\"px)\",\n    left: moonCyclePositions[ moonCycle ]+\"%\"\n  };\n\n  return ( \n    <section className='Creature'>\n      <img src={ creatureFace } alt=\"Creature's face\"></img>\n      <img className=\"sun\" src={ sun } alt=\"sun\" style={ sunPosition }></img>\n      <img className=\"moon\" src={ moon } alt=\"moon\" style={ moonPosition }></img>\n      <h2>{ moodDescription }</h2>\n    </section>\n  );\n}\n\nexport default creature;\n\n// <img src={logo} className=\"App-logo\" alt=\"logo\" /> ","import React from 'react';\n\nconst indicator = ( props ) => {\n  let color = ( props.value < 3 ) ? \"red\" : ( ( props.value < 5 ) ? \"yellow\" : \"green\" );\n  let bars = [];\n  \n  for( let i=0 ; i<10 ; i++ ){\n    let fill = ( i < props.value ) ? color : \"grey\";\n\n    bars.push( <li className={ fill+\" bar\" } key={ i }></li> );\n  }\n\n  return ( \n    <div className='indicator'>\n      <h5>{ props.name } <i className={ props.iconClass }></i> ( { props.value } )</h5>\n      <ul className=\"bars\">\n        { bars }\n      </ul>\n    </div>\n  );\n}\n\nexport default indicator;","import React from 'react';\nimport './indicators.css';\nimport Indicator from './indicator/indicator';\n\nconst indicators = ( props ) => {\n  return ( \n    <section className='Indicators'>\n      <Indicator className=\"hunger\" name=\"Hunger\" value={ props.hunger } iconClass=\"fas fa-utensils\"></Indicator>\n      <Indicator className=\"happiness\" name=\"Happiness\" value={ props.happiness } iconClass=\"far fa-smile\"></Indicator>\n      <Indicator className=\"health\" name=\"Health\" value={ props.health } iconClass=\"fas fa-briefcase-medical\"></Indicator>\n      <Indicator className=\"energy\" name=\"Energy\" value={ props.energy } iconClass=\"fas fa-bolt\"></Indicator>\n    </section>\n  );\n}\n\nexport default indicators;","import React from 'react';\nimport './controls.css'\n\nconst controls = ( props ) => {\n  return ( \n    <section className='Controls'>\n      <button className=\"feed-cake\" onClick={ props.feedCake }><i className=\"fas fa-birthday-cake\"></i> Feed cake</button>\n      <button className=\"feed-carrot\" onClick={ props.feedCarrot }><i className=\"fas fa-carrot\"></i> Feed carrots</button>\n      <button className=\"give-medicin\" onClick={ props.giveMedicine }><i className=\"fas fa-pills\"></i> Give medicine</button>\n      <button className=\"play\" onClick={ props.play }><i className=\"fas fa-futbol\"></i> Play</button>\n      <button className=\"sleep\" onClick={ props.sleep }><i className=\"fas fa-bed\"></i>Sleep</button>\n    </section>\n  );\n}\n\nexport default controls;","import React, { Component } from 'react';\nimport './main.css';\n\nimport { connect } from 'react-redux';\nimport Creature from './Creature/creature';\nimport Indicators from './Indicators/indicators';\nimport Controls from './Controls/controls';\n\nclass Main extends Component {\n  state = {\n    \n  }\n\n  render() {\n    return ( \n      <main className='Main'>\n        <Creature { ...this.props }></Creature>\n        <Indicators { ...this.props } ></Indicators>\n        <Controls { ...this.props }></Controls>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ...state\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    feedCake: () => dispatch({ type: \"FEED_CAKE\" }),\n    feedCarrot: () => dispatch({ type: \"FEED_CARROT\" }),\n    giveMedicine: () => dispatch({ type: \"GIVE_MEDICINE\" }),\n    play: () => dispatch({ type: \"PLAY\" }),\n    sleep: () => dispatch({ type: \"SLEEP\" })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)( Main );","import React from 'react';\n\nconst footer = ( props ) => {\n  return ( \n    <footer className='Footer'>\n      <p><a href=\"https://github.com/RicardoAgra\"><i className=\"fab fa-github\"></i></a> Made by Ricardo Agra, </p>\n      <p><i className=\"fab fa-react\"></i>Powered by <a className=\"react-link\" href=\"https://reactjs.org/\"> React</a>.</p>\n    </footer>\n  );\n}\n\nexport default footer;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './Containers/header';\nimport Main from './Containers/Main/main';\nimport Footer from './Containers/footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <Main></Main>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = { hunger: 0, happiness: 0, health: 5, energy: 0, awake: true, day: 0, hour: 0, score: 0 }\n\nconst max = ( value ) => (( value > 10 ) ? 10 : value );\nconst min = ( value ) => (( value < 0 ) ? 0 : value );\n\nconst reducer = ( state = initialState, action ) => {\n  let currentScore = ( state.hunger + state.happiness + state.health + state.energy ) / 4;\n\n  switch( action.type ){\n    case \"INCREMENT_HOUR\": {\n      if( state.hour === 23 ){\n        return {\n          ...state,\n          score: state.score + currentScore,\n          day: state.day + 1,\n          hour: 0,\n          hunger: min( state.hunger - 1 ),\n          happiness: min( state.happiness - 1 ),\n          health: min( state.health - 1 ),\n          energy: min( state.energy - 1 )\n        }\n      }\n      else {\n        return {\n          ...state,\n          score: state.score + currentScore,\n          hour: state.hour + 1\n        }\n      }\n    }\n    case 'FEED_CAKE': {\n      return {\n        ...state,\n        hunger: max( state.hunger + 2 ),\n        health: min( state.health - 1 )\n      }\n    }\n    case 'FEED_CARROT': {\n      return {\n        ...state,\n        hunger: max( state.hunger + 1 ),\n        health: max( state.health + 1 )\n      }\n    }\n    case 'GIVE_MEDICINE': {\n      return {\n        ...state,\n        health: max( state.health + 2 ),\n        happiness: min( state.happiness - 3 )\n      }\n    }\n    case 'PLAY': {\n      return {\n        ...state,\n        hunger: min( state.hunger - 1 ),\n        happiness: max( state.happiness + 2 ),\n        energy: min( state.energy - 2 )\n      }\n    }\n    case 'SLEEP': {\n      return {\n        ...state,\n        hunger: min( state.hunger - 1 ),\n        health: max( state.health + 1 ),\n        energy: max( state.energy + 4 )\n      }\n    }\n    case 'RESET': {\n      return {\n        ...initialState\n      }\n    }\n    default: return state;\n  }\n}\n\nexport default reducer;\n\n/* Subscription\nstore.subscribe( () => {\n  \n});\n\n// Dispatch\nstore.dispatch( {type: 'GET_HUNGER'} );\nstore.dispatch( {type: 'SET_HUNGER', value: 10 } );\nstore.dispatch( {type: 'GET_HAPPYNESS'} );\nstore.dispatch( {type: 'SET_HAPPYNESS', value: 10 } );\nstore.dispatch( {type: 'GET_HEALTH'} );\nstore.dispatch( {type: 'SET_HEALTH', value: 10 } );\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './Store/reducer';\n\n\nconst store = createStore( reducer );\n\nReactDOM.render(<Provider store={ store }><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}